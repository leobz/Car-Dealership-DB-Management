USE [GD2C2020]

--------------------------------------------------------------------------
----------CREACION DE STORED PROCEDURES PARA MIGRACIï¿½N-------------------


INSERT INTO UNIX.TipoMotor
SELECT DISTINCT TIPO_MOTOR_CODIGO
FROM gd_esquema.Maestra
WHERE TIPO_MOTOR_CODIGO IS NOT NULL;

INSERT INTO UNIX.TipoCaja
SELECT DISTINCT TIPO_CAJA_CODIGO, TIPO_CAJA_DESC
FROM gd_esquema.Maestra
WHERE TIPO_CAJA_CODIGO IS NOT NULL;

INSERT INTO UNIX.TipoAuto
SELECT DISTINCT TIPO_AUTO_CODIGO, TIPO_AUTO_DESC
FROM gd_esquema.Maestra
WHERE TIPO_AUTO_CODIGO IS NOT NULL;

INSERT INTO UNIX.TipoTransmision
SELECT DISTINCT TIPO_TRANSMISION_CODIGO, TIPO_TRANSMISION_DESC
FROM gd_esquema.Maestra
WHERE TIPO_TRANSMISION_CODIGO IS NOT NULL;

INSERT INTO UNIX.Cliente (CLIENTE_APELLIDO,CLIENTE_NOMBRE,CLIENTE_DIRECCION,CLIENTE_DNI, CLIENTE_FECHA_NAC,CLIENTE_MAIL)
SELECT DISTINCT CLIENTE_APELLIDO,CLIENTE_NOMBRE,CLIENTE_DIRECCION,CLIENTE_DNI, CLIENTE_FECHA_NAC,CLIENTE_MAIL
FROM gd_esquema.Maestra
WHERE CLIENTE_APELLIDO IS NOT NULL AND CLIENTE_DNI IS NOT NULL;

INSERT INTO UNIX.Cliente (CLIENTE_APELLIDO,CLIENTE_NOMBRE,CLIENTE_DIRECCION,CLIENTE_DNI, CLIENTE_FECHA_NAC,CLIENTE_MAIL)
SELECT DISTINCT  FAC_CLIENTE_APELLIDO,FAC_CLIENTE_NOMBRE,FAC_CLIENTE_DIRECCION,FAC_CLIENTE_DNI, FAC_CLIENTE_FECHA_NAC,FAC_CLIENTE_MAIL
FROM gd_esquema.Maestra
WHERE FAC_CLIENTE_APELLIDO IS NOT NULL AND FAC_CLIENTE_DNI IS NOT NULL;

INSERT INTO UNIX.Fabricante (FABRICANTE_NOMBRE)
SELECT DISTINCT FABRICANTE_NOMBRE
FROM gd_esquema.Maestra;

SELECT * FROM UNIX.Sucursal
SELECT * FROM UNIX.Fabricante

INSERT INTO UNIX.Sucursal (SUCURSAL_DIRECCION, SUCURSAL_MAIL,SUCURSAL_TELEFONO, SUCURSAL_CIUDAD)
SELECT DISTINCT SUCURSAL_DIRECCION, SUCURSAL_MAIL,SUCURSAL_TELEFONO, SUCURSAL_CIUDAD
FROM gd_esquema.Maestra
WHERE SUCURSAL_DIRECCION IS NOT NULL;

INSERT INTO UNIX.Modelo (MODELO_CODIGO, MODELO_NOMBRE, MODELO_POTENCIA,TIPO_AUTO_CODIGO, TIPO_MOTOR_CODIGO, TIPO_CAJA_CODIGO, TIPO_TRANSMISION_CODIGO, FABRICANTE_CODIGO)
SELECT DISTINCT MODELO_CODIGO, MODELO_NOMBRE, MODELO_POTENCIA,TIPO_AUTO_CODIGO, TIPO_MOTOR_CODIGO, TIPO_CAJA_CODIGO, TIPO_TRANSMISION_CODIGO, F.FABRICANTE_CODIGO
FROM gd_esquema.Maestra M 
INNER JOIN UNIX.Fabricante F ON M.FABRICANTE_NOMBRE = F.FABRICANTE_NOMBRE
WHERE TIPO_AUTO_CODIGO IS NOT NULL AND TIPO_CAJA_CODIGO IS NOT NULL AND TIPO_MOTOR_CODIGO IS NOT NULL AND TIPO_TRANSMISION_CODIGO IS NOT NULL;

SELECT* FROM UNIX.Fabricante

INSERT INTO UNIX.Automovil (MODELO_CODIGO, AUTO_CANT_KMS, AUTO_NRO_CHASIS, AUTO_FECHA_ALTA, AUTO_NRO_MOTOR, AUTO_PATENTE, SUCURSAL_CODIGO)
SELECT MODELO_CODIGO, AUTO_CANT_KMS, AUTO_NRO_CHASIS, AUTO_FECHA_ALTA, AUTO_NRO_MOTOR, AUTO_PATENTE, M.SUCURSAL_CODIGO
FROM gd_esquema.Maestra A
INNER JOIN UNIX.Sucursal M ON A.SUCURSAL_DIRECCION = M.SUCURSAL_DIRECCION
WHERE AUTO_NRO_CHASIS IS NOT NULL;

INSERT INTO UNIX.AutoParte (AUTO_PARTE_CODIGO, AUTO_PARTE_DESCRIPCION, FABRICANTE_CODIGO, MODELO_CODIGO, AUTO_PARTE_PRECIO)
SELECT DISTINCT AUTO_PARTE_CODIGO, AUTO_PARTE_DESCRIPCION, FABRICANTE_CODIGO, MODELO_CODIGO, COMPRA_PRECIO
FROM gd_esquema.Maestra M
INNER JOIN UNIX.Fabricante F ON M.FABRICANTE_NOMBRE = F.FABRICANTE_NOMBRE
WHERE AUTO_PATENTE IS NULL AND AUTO_PARTE_CODIGO IS NOT NULL AND COMPRA_PRECIO IS NOT NULL;

INSERT INTO UNIX.Compra (COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA, PRECIO_TOTAL)
SELECT DISTINCT COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA, COMPRA_PRECIO
FROM gd_esquema.Maestra M
INNER JOIN UNIX.Sucursal S ON S.SUCURSAL_DIRECCION = M.SUCURSAL_DIRECCION
INNER JOIN UNIX.Cliente Cl ON (Cl.CLIENTE_DNI = M.CLIENTE_DNI and
Cl.CLIENTE_APELLIDO= M.CLIENTE_APELLIDO and
Cl.CLIENTE_NOMBRE= M.CLIENTE_NOMBRE) or (Cl.CLIENTE_DNI = M.FAC_CLIENTE_DNI and
Cl.CLIENTE_APELLIDO= M.FAC_CLIENTE_APELLIDO and
Cl.CLIENTE_NOMBRE= M.FAC_CLIENTE_NOMBRE)
WHERE COMPRA_NRO IS NOT NULL

SELECT * FROM UNIX.Compra

INSERT INTO UNIX.Compra (COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA, PRECIO_TOTAL)
SELECT COMPRA_NRO,Cl.CLIENTE_CODIGO, S.SUCURSAL_CODIGO, COMPRA_FECHA, COMPRA_PRECIO
FROM
	(SELECT Distinct COMPRA_NRO, CLIENTE_DNI,CLIENTE_NOMBRE, CLIENTE_APELLIDO,SUCURSAL_DIRECCION, COMPRA_FECHA, COMPRA_PRECIO
	FROM  gd_esquema.Maestra M 
	WHERE COMPRA_NRO IS NOT NULL and CLIENTE_DNI IS NOT NULL) AS T
INNER JOIN UNIX.Sucursal S ON S.SUCURSAL_DIRECCION = T.SUCURSAL_DIRECCION
INNER JOIN UNIX.Cliente Cl ON (Cl.CLIENTE_DNI = T.CLIENTE_DNI and
Cl.CLIENTE_APELLIDO= T.CLIENTE_APELLIDO and
Cl.CLIENTE_NOMBRE= T.CLIENTE_NOMBRE)
ORDER BY COMPRA_NRO

Select TOP 200 * FROM gd_esquema.Maestra
WHERE COMPRA_NRO IS NOT NULL
ORDER BY COMPRA_NRO 

create trigger tipoCompra
on UNIX.Compra
instead of insert
AS
BEGIN
	declare @compra_num decimal(18,0), @cliente_codigo int, @sucursal_codigo int,
	@compra_fecha datetime2(3), @precio_total decimal(18,2), @auto_parte_codigo decimal(18,0)
	
	declare c_compras cursor for select i.COMPRA_NRO,CLIENTE_CODIGO,
	SUCURSAL_CODIGO, COMPRA_FECHA, PRECIO_TOTAL, AUTO_PARTE_CODIGO
	from inserted i JOIN (SELECT DISTINCT COMPRA_NRO, AUTO_PARTE_CODIGO
	FROM  gd_esquema.Maestra M 
	WHERE COMPRA_NRO IS NOT NULL) AS T
	ON (i.COMPRA_NRO=T.COMPRA_NRO)
	open c_compras
	fetch from c_compras
	into @compra_num, @cliente_codigo, @sucursal_codigo,
	@compra_fecha, @precio_total, @auto_parte_codigo

	while @@fetch_status=0
	BEGIN
		if @auto_parte_codigo IS NULL
		begin
		INSERT INTO UNIX.Compra(COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA, TIPO_COMPRA, PRECIO_TOTAL)
		VALUES(@compra_num, @cliente_codigo, @sucursal_codigo,
	    @compra_fecha,'automovil', @precio_total)
		end
		else
		begin
		INSERT INTO UNIX.Compra(COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA, TIPO_COMPRA, PRECIO_TOTAL)
		VALUES(@compra_num, @cliente_codigo, @sucursal_codigo,
	    @compra_fecha,'autoparte', @precio_total)
		end
	END
	fetch from c_compras into @compra_num, @cliente_codigo, @sucursal_codigo,
	@compra_fecha, @precio_total, @auto_parte_codigo
	END
	close c_compras
	deallocate c_compras
END

Select * from items


create trigger Tr_temaA
on items
instead of insert
AS
BEGIN
	declare @stock_num smallint, @order_num smallint, @item_num smallint,
	@quantity smallint
	declare @unit_price decimal(8,2)
	declare @manu_code char(3),@state char(2)
	declare c_items cursor for select i.item_num, i.order_num, stock_num,
	manu_code, quantity, unit_price, state
	from inserted i JOIN orders o
	ON (i.order_num=o.order_num)
	JOIN customer c
	ON (o.customer_num=c.customer_num);
	open c_items
	fetch from c_items
	into @item_num,@order_num,@stock_num,@manu_code,
	@quantity, @unit_price, @state
	while @@fetch_status=0
	BEGIN
		if @state='CA'
		begin
		if (select COUNT(*) FROM items where order_num=@order_num) < 5
		begin
		INSERT INTO items (i.item_num, i.order_num, stock_num,
		manu_code, quantity, unit_price)
		VALUES(@item_num,@order_num,@stock_num,@manu_code,
		@quantity,@unit_price)
		end
		else
		begin
		INSERT INTO items_error
		VALUES(@item_num, @order_num, @stock_num,
		@manu_code, @quantity, @unit_price,
		getDate())
	end
	end
	else
	begin
	INSERT INTO items VALUES(@item_num, @order_num, @stock_num,
	@manu_code, @quantity, @unit_price)
	end

	fetch from c_items into @item_num, @order_num, @stock_num,
	@manu_code, @quantity, @unit_price, @state;
	END
	close c_items
	deallocate c_items
END




INSERT INTO UNIX.CompraAutomovil (COMPRA_NRO, AUTOMOVIL_CODIGO, COMPRA_PRECIO)
SELECT DISTINCT COMPRA_NRO, A.AUTOMOVIL_CODIGO, COMPRA_PRECIO
FROM gd_esquema.Maestra M
INNER JOIN UNIX.Automovil A 
ON M.AUTO_NRO_MOTOR = A.AUTO_NRO_MOTOR AND M.AUTO_NRO_CHASIS = A.AUTO_NRO_CHASIS
WHERE M.AUTO_PATENTE IS NOT NULL and M.AUTO_PARTE_CODIGO IS NULL;

INSERT INTO UNIX.CompraAutomovil (COMPRA_NRO, AUTOMOVIL_CODIGO, COMPRA_PRECIO)
SELECT DISTINCT COMPRA_NRO, A.AUTOMOVIL_CODIGO, COMPRA_PRECIO
FROM gd_esquema.Maestra M
INNER JOIN UNIX.Automovil A ON M.AUTO_NRO_MOTOR = A.AUTO_NRO_MOTOR AND M.AUTO_NRO_CHASIS = A.AUTO_NRO_CHASIS
WHERE M.AUTO_PATENTE IS NOT NULL and M.AUTO_PARTE_CODIGO IS NULL;

SELECT TOP 100 * FROM UNIX.Automovil ;
------------------------------------------------------------------------------------
IF(OBJECT_ID('UNIX.Migrador_Fabricante') IS NOT NULL)
	DROP PROCEDURE UNIX.Migrador_Fabricante

GO
CREATE PROCEDURE UNIX.Migrador_Fabricante
AS
BEGIN
INSERT INTO UNIX.Fabricante
SELECT DISTINCT FABRICANTE_NOMBRE
FROM gd_esquema.Maestra;
END
GO

BEGIN

EXEC UNIX.Migrador_Fabricante

END
GO




-- LIMPIEZA

DROP TABLE UNIX.Automovil
DROP TABLE UNIX.Autoparte
DROP TABLE UNIX.Cliente
DROP TABLE UNIX.Compra
DROP TABLE UNIX.CompraPorAutoparte
DROP TABLE UNIX.CompraAutomovil
DROP TABLE UNIX.ItemAutomovil
DROP TABLE UNIX.ItemAutoparte
DROP TABLE UNIX.Fabricante
DROP TABLE UNIX.Factura
DROP TABLE UNIX.Item
DROP TABLE UNIX.Modelo
DROP TABLE UNIX.Sucursal
DROP TABLE UNIX.TipoAuto
DROP TABLE UNIX.TipoCaja
DROP TABLE UNIX.TipoMotor
DROP TABLE UNIX.TipoTransmision
DROP PROCEDURE UNIX.Migrador_Fabricante

DROP SCHEMA UNIX
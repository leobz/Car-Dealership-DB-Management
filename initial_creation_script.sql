BEGIN TRANSACTION
GO

CREATE SCHEMA UNIX
GO

IF(OBJECT_ID('CreacionTablasUnix') IS NOT NULL)
	DROP PROCEDURE CreacionTablasUnix
GO


CREATE PROCEDURE CreacionTablasUnix
AS
-- CREACION DE TABLAS --

BEGIN TRANSACTION
CREATE TABLE UNIX.Cliente
(
    CLIENTE_CODIGO INT identity(1,1) PRIMARY KEY,
    CLIENTE_APELLIDO nvarchar(255),
    CLIENTE_NOMBRE nvarchar(255),
    CLIENTE_DIRECCION nvarchar(255),
    CLIENTE_DNI decimal(18,0),
    CLIENTE_FECHA_NAC datetime2(3),
    CLIENTE_MAIL nvarchar(255)
);

CREATE TABLE UNIX.Compra
(
    COMPRA_NRO decimal(18,0) PRIMARY KEY,
    CLIENTE_CODIGO INT NOT NULL,
    SUCURSAL_CODIGO INT NOT NULL,
    COMPRA_FECHA datetime2(3),
    TIPO_COMPRA char(2),
    PRECIO_TOTAL decimal(18,2)
);

CREATE TABLE UNIX.CompraPorAutoparte
(
	COMPRA_AUTOPARTE_CODIGO INT identity(1,1) PRIMARY KEY,
    COMPRA_NRO DECIMAL(18,0) ,
    AUTO_PARTE_CODIGO DECIMAL(18,0),
    COMPRA_CANT decimal(18,0),
    COMPRA_PRECIO DECIMAL(18,2)
);

CREATE TABLE UNIX.CompraAutomovil
(
	COMPRA_AUTOMOVIL_CODIGO INT identity(1,1) PRIMARY KEY,
    COMPRA_NRO DECIMAL(18,0),
    AUTOMOVIL_CODIGO INT,
    COMPRA_PRECIO DECIMAL(18,2)
);

CREATE TABLE UNIX.Autoparte
(
    AUTO_PARTE_CODIGO DECIMAL(18,0) PRIMARY KEY NOT NULL,
    AUTO_PARTE_DESCRIPCION nvarchar(255),
    FABRICANTE_CODIGO INT NOT NULL,
    MODELO_CODIGO DECIMAL(18,0) NOT NULL,
    CATEGORIA_RUBRO varchar(255),
    AUTO_PARTE_PRECIO decimal(18,2)
);

CREATE TABLE UNIX.Automovil
(
    AUTOMOVIL_CODIGO INT identity(1,1) PRIMARY KEY,
    MODELO_CODIGO DECIMAL(18,0) NOT NULL,
    AUTO_CANT_KMS decimal(18,0) NULL,
    AUTO_NRO_CHASIS nvarchar(50) NULL,
    AUTO_FECHA_ALTA datetime2(3) NULL,
    AUTO_NRO_MOTOR nvarchar(50) NULL,
    AUTO_PATENTE nvarchar(50) NULL,
    SUCURSAL_CODIGO INT NOT NULL
);

CREATE TABLE UNIX.Fabricante
(
    FABRICANTE_CODIGO INT identity(1,1) PRIMARY KEY,
    FABRICANTE_NOMBRE nvarchar(255)
);

CREATE TABLE UNIX.Sucursal
(
    SUCURSAL_CODIGO INT identity(1,1) PRIMARY KEY,
    SUCURSAL_DIRECCION nvarchar(255),
    SUCURSAL_MAIL nvarchar(255),
    SUCURSAL_TELEFONO decimal(18,0),
    SUCURSAL_CIUDAD nvarchar(255)
);

CREATE TABLE UNIX.Modelo
(
    MODELO_CODIGO DECIMAL(18,0) PRIMARY KEY,
    MODELO_NOMBRE nvarchar(255),
    MODELO_POTENCIA nvarchar(255),
    TIPO_AUTO_CODIGO decimal(18,0) NOT NULL,
    TIPO_MOTOR_CODIGO decimal(18,0) NOT NULL,
    TIPO_CAJA_CODIGO decimal(18,0) NOT NULL,
    TIPO_TRANSMISION_CODIGO decimal(18,0) NOT NULL,
    FABRICANTE_CODIGO INT NOT NULL
);

CREATE TABLE UNIX.TipoAuto
(
    TIPO_AUTO_CODIGO decimal(18,0) PRIMARY KEY,
    TIPO_AUTO_DESC nvarchar(255)
);

CREATE TABLE UNIX.TipoTransmision
(
    TIPO_TRANSMISION_CODIGO decimal(18,0) PRIMARY KEY,
    TIPO_TRANSMISION_DESC nvarchar(255) NULL
);

CREATE TABLE UNIX.TipoCaja
(
    TIPO_CAJA_CODIGO decimal(18,0) PRIMARY KEY,
    TIPO_CAJA_DESC nvarchar(255)
);

CREATE TABLE UNIX.TipoMotor
(
    TIPO_MOTOR_CODIGO decimal(18,0) PRIMARY KEY
);

CREATE TABLE UNIX.Factura
(
    FACTURA_NRO DECIMAL(18,0) PRIMARY KEY,
    FACTURA_FECHA datetime2(3),
    PRECIO_TOTAL DECIMAL(18,2),
    SUCURSAL_CODIGO INT NULL,
    TIPO_PRODUCTO nvarchar(255),
    CLIENTE_CODIGO INT NOT NULL,
    COMPRA_NRO DECIMAL(18,0)
);

CREATE TABLE UNIX.ItemAutoparte
(
    ITEM_AUTOPARTE_CODIGO INT identity(1,1) PRIMARY KEY,
	FACTURA_NRO DECIMAL(18,0) ,
    AUTO_PARTE_CODIGO DECIMAL(18,0),
    CANT_FACTURADA decimal(18,0) NULL,
    PRECIO_FACTURADO DECIMAL(18,2),
);

CREATE TABLE UNIX.ItemAutomovil
(
	ITEM_AUTOMOVIL_CODIGO INT identity(1,1) PRIMARY KEY,
    FACTURA_NRO DECIMAL(18,0),
    AUTOMOVIL_CODIGO INT,
    PRECIO_FACTURADO DECIMAL(18,2),
);
COMMIT
GO

EXEC CreacionTablasUnix;
























-- DECLARACION DE FOREIGN KEYS --

IF(OBJECT_ID('CrearFKs') IS NOT NULL)
	DROP PROCEDURE CrearFKs
GO

CREATE PROCEDURE CrearFKs
AS
-- Tabla Compra

BEGIN TRANSACTION

--- Compras de Automoviles

ALTER TABLE UNIX.Compra
ADD CONSTRAINT FK_CompraCliente 
FOREIGN KEY (CLIENTE_CODIGO) REFERENCES UNIX.Cliente(CLIENTE_CODIGO);

ALTER TABLE UNIX.Compra
ADD CONSTRAINT FK_CompraSucursal
FOREIGN KEY (SUCURSAL_CODIGO) REFERENCES UNIX.Sucursal(SUCURSAL_CODIGO);

-- Tabla CompraAutomovil
ALTER TABLE UNIX.CompraAutomovil
ADD CONSTRAINT FK_CompraAutomovilCompra
FOREIGN KEY (COMPRA_NRO) REFERENCES UNIX.Compra(COMPRA_NRO);

ALTER TABLE UNIX.CompraAutomovil
ADD CONSTRAINT FK_CompraAutomovilAutomovil
FOREIGN KEY (AUTOMOVIL_CODIGO) REFERENCES UNIX.Automovil(AUTOMOVIL_CODIGO);

--Tabla CompraPorAutoparte

ALTER TABLE UNIX.CompraPorAutoparte
ADD CONSTRAINT FK_CompraXAutopCompra
FOREIGN KEY (COMPRA_NRO) REFERENCES UNIX.Compra(COMPRA_NRO);

ALTER TABLE UNIX.CompraPorAutoparte
ADD CONSTRAINT FK_CompraXAutopAutop
FOREIGN KEY (AUTO_PARTE_CODIGO) REFERENCES UNIX.Autoparte(AUTO_PARTE_CODIGO);

-- Tabla Autoparte

ALTER TABLE UNIX.Autoparte
ADD CONSTRAINT FK_Autop_Modelo
FOREIGN KEY (MODELO_CODIGO) REFERENCES UNIX.Modelo(MODELO_CODIGO);

ALTER TABLE UNIX.Autoparte
ADD CONSTRAINT FK_Autop_Fabricante
FOREIGN KEY (FABRICANTE_CODIGO) REFERENCES UNIX.Fabricante(FABRICANTE_CODIGO);

--Tabla Automovil

ALTER TABLE UNIX.Automovil
ADD CONSTRAINT FK_Automovil_Modelo
FOREIGN KEY (MODELO_CODIGO) REFERENCES UNIX.Modelo(MODELO_CODIGO);

ALTER TABLE UNIX.Automovil
ADD CONSTRAINT FK_Automovil_Sucursal
FOREIGN KEY (SUCURSAL_CODIGO) REFERENCES UNIX.Sucursal(SUCURSAL_CODIGO);

--Tabla Modelo

ALTER TABLE UNIX.Modelo
ADD CONSTRAINT FK_Modelo_Fabricante
FOREIGN KEY (FABRICANTE_CODIGO) REFERENCES UNIX.Fabricante(FABRICANTE_CODIGO);

ALTER TABLE UNIX.Modelo
ADD CONSTRAINT FK_Modelo_TipoCaja
FOREIGN KEY (TIPO_CAJA_CODIGO) REFERENCES UNIX.TipoCaja(TIPO_CAJA_CODIGO);

ALTER TABLE UNIX.Modelo
ADD CONSTRAINT FK_Modelo_TipoMotor
FOREIGN KEY (TIPO_MOTOR_CODIGO) REFERENCES UNIX.TipoMotor(TIPO_MOTOR_CODIGO);

ALTER TABLE UNIX.Modelo
ADD CONSTRAINT FK_Modelo_TipoTransmision
FOREIGN KEY (TIPO_TRANSMISION_CODIGO) REFERENCES UNIX.TipoTransmision(TIPO_TRANSMISION_CODIGO);

ALTER TABLE UNIX.Modelo
ADD CONSTRAINT FK_Modelo_TipoAuto
FOREIGN KEY (TIPO_AUTO_CODIGO) REFERENCES UNIX.TipoAuto(TIPO_AUTO_CODIGO);

--Tabla ItemAutoparte

ALTER TABLE UNIX.ItemAutoparte
ADD CONSTRAINT FK_Item_Factura
FOREIGN KEY (FACTURA_NRO) REFERENCES UNIX.Factura(FACTURA_NRO);

ALTER TABLE UNIX.ItemAutoparte
ADD CONSTRAINT FK_Item_Autop
FOREIGN KEY (AUTO_PARTE_CODIGO) REFERENCES UNIX.Autoparte(AUTO_PARTE_CODIGO);

--Tabla ItemAutomovil

ALTER TABLE UNIX.ItemAutomovil
ADD CONSTRAINT FK_ItemAutomovil_Factura
FOREIGN KEY (FACTURA_NRO) REFERENCES UNIX.Factura(FACTURA_NRO);

ALTER TABLE UNIX.ItemAutomovil
ADD CONSTRAINT FK_ItemAutomovil_Automovil
FOREIGN KEY (AUTOMOVIL_CODIGO) REFERENCES UNIX.Automovil(AUTOMOVIL_CODIGO);

--Tabla Factura

ALTER TABLE UNIX.Factura
ADD CONSTRAINT FK_Factura_Cliente
FOREIGN KEY (CLIENTE_CODIGO) REFERENCES UNIX.Cliente(CLIENTE_CODIGO);

ALTER TABLE UNIX.Factura
ADD CONSTRAINT FK_Factura_Compra
FOREIGN KEY (COMPRA_NRO) REFERENCES UNIX.Compra(COMPRA_NRO);

ALTER TABLE UNIX.Factura
ADD CONSTRAINT FK_Factura_Sucursal
FOREIGN KEY (SUCURSAL_CODIGO) REFERENCES UNIX.Sucursal(SUCURSAL_CODIGO);

COMMIT
GO


EXEC CrearFKs;







--------------------------------------------------------------------------
----------CREACION DE STORED PROCEDURES PARA MIGRACION-------------------


IF(OBJECT_ID('Migracion') IS NOT NULL)
	DROP PROCEDURE Migracion
GO

CREATE PROCEDURE Migracion
AS

BEGIN TRANSACTION

INSERT INTO UNIX.TipoMotor
SELECT DISTINCT TIPO_MOTOR_CODIGO
FROM gd_esquema.Maestra
WHERE TIPO_MOTOR_CODIGO IS NOT NULL;

INSERT INTO UNIX.TipoCaja
SELECT DISTINCT TIPO_CAJA_CODIGO, TIPO_CAJA_DESC
FROM gd_esquema.Maestra
WHERE TIPO_CAJA_CODIGO IS NOT NULL;

INSERT INTO UNIX.TipoAuto
SELECT DISTINCT TIPO_AUTO_CODIGO, TIPO_AUTO_DESC
FROM gd_esquema.Maestra
WHERE TIPO_AUTO_CODIGO IS NOT NULL;

INSERT INTO UNIX.TipoTransmision
SELECT DISTINCT TIPO_TRANSMISION_CODIGO, TIPO_TRANSMISION_DESC
FROM gd_esquema.Maestra
WHERE TIPO_TRANSMISION_CODIGO IS NOT NULL;

INSERT INTO UNIX.Cliente
	(CLIENTE_APELLIDO,CLIENTE_NOMBRE,CLIENTE_DIRECCION,CLIENTE_DNI, CLIENTE_FECHA_NAC,CLIENTE_MAIL)
SELECT DISTINCT CLIENTE_APELLIDO, CLIENTE_NOMBRE, CLIENTE_DIRECCION, CLIENTE_DNI, CLIENTE_FECHA_NAC, CLIENTE_MAIL
FROM gd_esquema.Maestra
WHERE CLIENTE_APELLIDO IS NOT NULL AND CLIENTE_DNI IS NOT NULL;

INSERT INTO UNIX.Cliente
	(CLIENTE_APELLIDO,CLIENTE_NOMBRE,CLIENTE_DIRECCION,CLIENTE_DNI, CLIENTE_FECHA_NAC,CLIENTE_MAIL)
SELECT DISTINCT FAC_CLIENTE_APELLIDO, FAC_CLIENTE_NOMBRE, FAC_CLIENTE_DIRECCION, FAC_CLIENTE_DNI, FAC_CLIENTE_FECHA_NAC, FAC_CLIENTE_MAIL
FROM gd_esquema.Maestra
WHERE FAC_CLIENTE_APELLIDO IS NOT NULL AND FAC_CLIENTE_DNI IS NOT NULL;

INSERT INTO UNIX.Fabricante
	(FABRICANTE_NOMBRE)
SELECT DISTINCT FABRICANTE_NOMBRE
FROM gd_esquema.Maestra;


INSERT INTO UNIX.Sucursal (SUCURSAL_DIRECCION, SUCURSAL_MAIL,SUCURSAL_TELEFONO, SUCURSAL_CIUDAD)
SELECT DISTINCT SUCURSAL_DIRECCION, SUCURSAL_MAIL,SUCURSAL_TELEFONO, SUCURSAL_CIUDAD
FROM gd_esquema.Maestra
WHERE SUCURSAL_DIRECCION IS NOT NULL;

INSERT INTO UNIX.Modelo
	(MODELO_CODIGO, MODELO_NOMBRE, MODELO_POTENCIA,TIPO_AUTO_CODIGO, TIPO_MOTOR_CODIGO, TIPO_CAJA_CODIGO, TIPO_TRANSMISION_CODIGO, FABRICANTE_CODIGO)
SELECT DISTINCT MODELO_CODIGO, MODELO_NOMBRE, MODELO_POTENCIA, TIPO_AUTO_CODIGO, TIPO_MOTOR_CODIGO, TIPO_CAJA_CODIGO, TIPO_TRANSMISION_CODIGO, F.FABRICANTE_CODIGO
FROM gd_esquema.Maestra M
	INNER JOIN UNIX.Fabricante F ON M.FABRICANTE_NOMBRE = F.FABRICANTE_NOMBRE
WHERE TIPO_AUTO_CODIGO IS NOT NULL AND TIPO_CAJA_CODIGO IS NOT NULL AND TIPO_MOTOR_CODIGO IS NOT NULL AND TIPO_TRANSMISION_CODIGO IS NOT NULL;


INSERT INTO UNIX.Automovil (MODELO_CODIGO, AUTO_CANT_KMS, AUTO_NRO_CHASIS, AUTO_FECHA_ALTA, AUTO_NRO_MOTOR, AUTO_PATENTE, SUCURSAL_CODIGO)
SELECT DISTINCT MODELO_CODIGO, AUTO_CANT_KMS, AUTO_NRO_CHASIS, AUTO_FECHA_ALTA, AUTO_NRO_MOTOR, AUTO_PATENTE, M.SUCURSAL_CODIGO
FROM gd_esquema.Maestra A
	INNER JOIN UNIX.Sucursal M ON A.SUCURSAL_DIRECCION = M.SUCURSAL_DIRECCION
WHERE
    AUTO_PATENTE IS NOT NULL
ORDER BY AUTO_PATENTE;

INSERT INTO UNIX.AutoParte
	(AUTO_PARTE_CODIGO, AUTO_PARTE_DESCRIPCION, FABRICANTE_CODIGO, MODELO_CODIGO, AUTO_PARTE_PRECIO)
SELECT DISTINCT AUTO_PARTE_CODIGO, AUTO_PARTE_DESCRIPCION, FABRICANTE_CODIGO, MODELO_CODIGO, COMPRA_PRECIO
FROM gd_esquema.Maestra M
	INNER JOIN UNIX.Fabricante F ON M.FABRICANTE_NOMBRE = F.FABRICANTE_NOMBRE
WHERE AUTO_PATENTE IS NULL AND AUTO_PARTE_CODIGO IS NOT NULL AND COMPRA_PRECIO IS NOT NULL;

--PARA AUTOMOVILES
INSERT INTO UNIX.Compra
	(COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA, TIPO_COMPRA, PRECIO_TOTAL)
SELECT COMPRA_NRO, Cl.CLIENTE_CODIGO, S.SUCURSAL_CODIGO, COMPRA_FECHA, 'AM', COMPRA_PRECIO
FROM
	(
	SELECT DISTINCT COMPRA_NRO, CLIENTE_DNI, CLIENTE_NOMBRE, CLIENTE_APELLIDO, SUCURSAL_DIRECCION, COMPRA_FECHA, COMPRA_PRECIO
	FROM gd_esquema.Maestra M
	WHERE 
		COMPRA_NRO IS NOT NULL AND
		CLIENTE_DNI IS NOT NULL AND
		AUTO_PATENTE IS NOT NULL		
	) AS M
	INNER JOIN UNIX.Sucursal S ON S.SUCURSAL_DIRECCION = M.SUCURSAL_DIRECCION
	INNER JOIN UNIX.Cliente Cl ON 
(
	Cl.CLIENTE_DNI = M.CLIENTE_DNI and
		Cl.CLIENTE_APELLIDO= M.CLIENTE_APELLIDO and
		Cl.CLIENTE_NOMBRE= M.CLIENTE_NOMBRE
)
ORDER BY COMPRA_NRO

--PARA AUTOPARTES
INSERT INTO UNIX.Compra (COMPRA_NRO,CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA,TIPO_COMPRA, PRECIO_TOTAL)
SELECT COMPRA_NRO,Cl.CLIENTE_CODIGO, S.SUCURSAL_CODIGO, COMPRA_FECHA,'AP',SUM(COMPRA_PRECIO*COMPRA_CANT)
FROM
	(SELECT DISTINCT COMPRA_NRO, CLIENTE_DNI,CLIENTE_NOMBRE, CLIENTE_APELLIDO,SUCURSAL_DIRECCION, COMPRA_FECHA, COMPRA_PRECIO, COMPRA_CANT
	FROM  gd_esquema.Maestra M 
	WHERE COMPRA_NRO IS NOT NULL and CLIENTE_DNI IS NOT NULL and AUTO_PARTE_CODIGO IS NOT NULL) AS T
INNER JOIN UNIX.Sucursal S ON S.SUCURSAL_DIRECCION = T.SUCURSAL_DIRECCION
INNER JOIN UNIX.Cliente Cl ON (Cl.CLIENTE_DNI = T.CLIENTE_DNI and
Cl.CLIENTE_APELLIDO= T.CLIENTE_APELLIDO and
Cl.CLIENTE_NOMBRE= T.CLIENTE_NOMBRE)
GROUP BY COMPRA_NRO, CLIENTE_CODIGO, SUCURSAL_CODIGO, COMPRA_FECHA
ORDER BY COMPRA_NRO

INSERT INTO UNIX.CompraAutomovil (COMPRA_NRO, AUTOMOVIL_CODIGO, COMPRA_PRECIO)
SELECT COMPRA_NRO, A.AUTOMOVIL_CODIGO, COMPRA_PRECIO
FROM (
	SELECT DISTINCT COMPRA_NRO, AUTO_PATENTE, COMPRA_PRECIO FROM gd_esquema.Maestra
	WHERE 
		COMPRA_NRO IS NOT NULL AND
		AUTO_PATENTE IS NOT NULL) AS M
INNER JOIN UNIX.Automovil A ON (M.AUTO_PATENTE = A.AUTO_PATENTE);

INSERT INTO UNIX.CompraPorAutoparte (COMPRA_NRO, AUTO_PARTE_CODIGO, COMPRA_CANT, COMPRA_PRECIO)
SELECT COMPRA_NRO, AP.AUTO_PARTE_CODIGO, COMPRA_CANT, COMPRA_PRECIO
FROM (
  SELECT DISTINCT COMPRA_NRO, AUTO_PARTE_CODIGO, COMPRA_CANT, COMPRA_PRECIO FROM gd_esquema.Maestra
  WHERE 
    COMPRA_NRO IS NOT NULL AND
    AUTO_PARTE_CODIGO IS NOT NULL
) AS M
INNER JOIN UNIX.Autoparte AP ON (M.AUTO_PARTE_CODIGO = AP.AUTO_PARTE_CODIGO);

--PARA AUTOMOVIL
INSERT INTO UNIX.Factura
  (FACTURA_NRO,FACTURA_FECHA,PRECIO_TOTAL, SUCURSAL_CODIGO, TIPO_PRODUCTO, CLIENTE_CODIGO, COMPRA_NRO)
SELECT FACTURA_NRO, FACTURA_FECHA,PRECIO_FACTURADO, S.SUCURSAL_CODIGO, 'AM', Cl.CLIENTE_CODIGO, M.COMPRA_NRO
FROM
  (
  SELECT DISTINCT FACTURA_NRO, FACTURA_FECHA, COMPRA_PRECIO, FAC_SUCURSAL_DIRECCION, FAC_CLIENTE_DNI, FAC_CLIENTE_NOMBRE, FAC_CLIENTE_APELLIDO,PRECIO_FACTURADO, COMPRA_NRO
  FROM gd_esquema.Maestra
  WHERE
    FACTURA_NRO IS NOT NULL AND
    FAC_CLIENTE_DNI IS NOT NULL AND
    AUTO_PATENTE IS NOT NULL    
  ) AS M
  INNER JOIN UNIX.Sucursal S ON S.SUCURSAL_DIRECCION = M.FAC_SUCURSAL_DIRECCION
  INNER JOIN UNIX.Cliente Cl ON 
(
    Cl.CLIENTE_DNI = M.FAC_CLIENTE_DNI and
    Cl.CLIENTE_APELLIDO= M.FAC_CLIENTE_APELLIDO and
    Cl.CLIENTE_NOMBRE= M.FAC_CLIENTE_NOMBRE
)
ORDER BY FACTURA_NRO

--PARA AUTOPARTE
INSERT INTO UNIX.Factura (FACTURA_NRO,FACTURA_FECHA,PRECIO_TOTAL, TIPO_PRODUCTO, CLIENTE_CODIGO, SUCURSAL_CODIGO)
SELECT FACTURA_NRO, FACTURA_FECHA, SUM(PRECIO_FACTURADO*CANT_FACTURADA), 'AP', Cl.CLIENTE_CODIGO, S.SUCURSAL_CODIGO
FROM
  (SELECT DISTINCT FACTURA_NRO, FACTURA_FECHA, FAC_CLIENTE_DNI, FAC_CLIENTE_NOMBRE,
   FAC_CLIENTE_APELLIDO,PRECIO_FACTURADO, CANT_FACTURADA, FAC_SUCURSAL_DIRECCION
  FROM  gd_esquema.Maestra 
  WHERE 
    FACTURA_NRO IS NOT NULL and
    FAC_CLIENTE_DNI IS NOT NULL and
    AUTO_PARTE_CODIGO IS NOT NULL
  ) AS T
INNER JOIN UNIX.Cliente Cl ON (
  Cl.CLIENTE_DNI = T.FAC_CLIENTE_DNI and
  Cl.CLIENTE_APELLIDO= T.FAC_CLIENTE_APELLIDO and
  Cl.CLIENTE_NOMBRE= T.FAC_CLIENTE_NOMBRE
  )
INNER JOIN UNIX.Sucursal S ON (S.SUCURSAL_DIRECCION = T.FAC_SUCURSAL_DIRECCION)
GROUP BY FACTURA_NRO, CLIENTE_CODIGO, FACTURA_FECHA, S.SUCURSAL_CODIGO
ORDER BY FACTURA_NRO

INSERT INTO UNIX.ItemAutoparte (FACTURA_NRO, AUTO_PARTE_CODIGO, CANT_FACTURADA, PRECIO_FACTURADO)
SELECT FACTURA_NRO, AUTO_PARTE_CODIGO, CANT_FACTURADA, PRECIO_FACTURADO
FROM gd_esquema.Maestra
WHERE AUTO_PARTE_CODIGO IS NOT NULL and FACTURA_NRO IS NOT NULL
ORDER BY FACTURA_NRO, AUTO_PARTE_CODIGO;

INSERT INTO UNIX.ItemAutomovil (FACTURA_NRO, AUTOMOVIL_CODIGO, PRECIO_FACTURADO)
SELECT DISTINCT FACTURA_NRO, AUTOMOVIL_CODIGO, PRECIO_FACTURADO
FROM gd_esquema.Maestra M
INNER JOIN UNIX.Automovil A ON M.AUTO_PATENTE = A.AUTO_PATENTE
WHERE M.AUTO_PATENTE IS NOT NULL and FACTURA_NRO IS NOT NULL

COMMIT
GO

EXEC Migracion;

COMMIT TRANSACTION